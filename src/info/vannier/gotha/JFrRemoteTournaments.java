/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package info.vannier.gotha;

import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luc
 */
public class JFrRemoteTournaments extends javax.swing.JFrame {

    /**
     * Creates new form JFrRemote
     */
    public JFrRemoteTournaments() {
        initComponents();
        customInitComponents();
    }
    
    private void customInitComponents(){


        updateAllViews();
    }

    private void updateAllViews(){
        setTitle("Remote .. Tournaments");
    }
    
    private void cleanClose(){
        dispose();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        grpTournaments = new javax.swing.ButtonGroup();
        grpCopies = new javax.swing.ButtonGroup();
        pnlTournamentSelection = new javax.swing.JPanel();
        rdbAllTournaments = new javax.swing.JRadioButton();
        rdbOnlySomeTournaments = new javax.swing.JRadioButton();
        rdbAllCopies = new javax.swing.JRadioButton();
        rdbOnlyLastCopy = new javax.swing.JRadioButton();
        btnUpdate = new javax.swing.JButton();
        scpTournaments = new javax.swing.JScrollPane();
        tblTournaments = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        pnlTournamentSelection.setBorder(javax.swing.BorderFactory.createTitledBorder("Tournament selection"));
        pnlTournamentSelection.setLayout(null);

        grpTournaments.add(rdbAllTournaments);
        rdbAllTournaments.setSelected(true);
        rdbAllTournaments.setText("All Tournaments");
        pnlTournamentSelection.add(rdbAllTournaments);
        rdbAllTournaments.setBounds(20, 20, 210, 23);

        grpTournaments.add(rdbOnlySomeTournaments);
        rdbOnlySomeTournaments.setText("Only Tournaments since 1 week");
        pnlTournamentSelection.add(rdbOnlySomeTournaments);
        rdbOnlySomeTournaments.setBounds(20, 40, 210, 23);

        grpCopies.add(rdbAllCopies);
        rdbAllCopies.setText("All copies");
        pnlTournamentSelection.add(rdbAllCopies);
        rdbAllCopies.setBounds(20, 90, 210, 23);

        grpCopies.add(rdbOnlyLastCopy);
        rdbOnlyLastCopy.setSelected(true);
        rdbOnlyLastCopy.setText("Only last copy");
        pnlTournamentSelection.add(rdbOnlyLastCopy);
        rdbOnlyLastCopy.setBounds(20, 110, 210, 23);

        getContentPane().add(pnlTournamentSelection);
        pnlTournamentSelection.setBounds(80, 20, 260, 140);

        btnUpdate.setText("Update remote tournaments list");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate);
        btnUpdate.setBounds(350, 30, 220, 120);

        scpTournaments.setBorder(javax.swing.BorderFactory.createTitledBorder("Remote tournaments list"));

        tblTournaments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Short name", "Full name", "Begin date", "Save date/time", "Location", "Director"
            }
        ));
        scpTournaments.setViewportView(tblTournaments);

        getContentPane().add(scpTournaments);
        scpTournaments.setBounds(80, 170, 870, 350);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cleanClose();
    }//GEN-LAST:event_formWindowClosing

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        ArrayList<TournamentInterface> alT = RemoteTournament.downloadTournaments(this.rdbAllTournaments.isSelected(), this.rdbAllCopies.isSelected());
        
        DefaultTableModel model = (DefaultTableModel) this.tblTournaments.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        
        for(TournamentInterface t:alT){
            try {
                TournamentParameterSet tps = t.getTournamentParameterSet();
                GeneralParameterSet gps = tps.getGeneralParameterSet();
                Vector<String> row = new Vector<String>();
                row.add("");
                row.add(t.getShortName());
                row.add(t.getFullName());
                row.add("" + gps.getBeginDate());
                //row.add("Save Time");
                row.add("" + gps.getNumberOfRounds());
                row.add("" + gps.getLocation());
                row.add("" + gps.getDirector());
                
                model.addRow(row);
            } catch (RemoteException ex) {
                Logger.getLogger(JFrRemoteTournaments.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnUpdateActionPerformed


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup grpCopies;
    private javax.swing.ButtonGroup grpTournaments;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel pnlTournamentSelection;
    private javax.swing.JRadioButton rdbAllCopies;
    private javax.swing.JRadioButton rdbAllTournaments;
    private javax.swing.JRadioButton rdbOnlyLastCopy;
    private javax.swing.JRadioButton rdbOnlySomeTournaments;
    private javax.swing.JScrollPane scpTournaments;
    private javax.swing.JTable tblTournaments;
    // End of variables declaration//GEN-END:variables
}
